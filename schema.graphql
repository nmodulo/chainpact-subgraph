
type GigPactEntity @entity {
  id: Bytes!
  creator: Bytes!
  created: BigInt!
  employer: Bytes!
  employee: Bytes!
  payAmount: String!
  erc20TokenAddress: Bytes!
  pactPayScheduleDays: BigInt!
  pactName: String!
  employeeSignedDate: BigInt
  employerSignedDate: BigInt
  pactStartedDate: BigInt
  pactId: Bytes!
  inputData: Bytes!
  documentHash: Bytes
  disputeData: DisputeData!
  payData: PayData!
  stakeAmount: String!
  pactState: Int!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  employeeDelegates: [Bytes!]!
  employerDelegates: [Bytes!]!
  paymentHistory: [LogPaymentMade!]! @derivedFrom(field: "pact")
  pactTransactions: [GigTransactionEntity!]! @derivedFrom(field: "pactId")
}

type ProposalTransactionEntity @entity(immutable: true) {
  id: Bytes!
  action: Int!
  pactType: Int!
  pactId: ProposalPactEntity
  gasPrice: String!
  gasUsed: String!
  transactionHash: Bytes!
  blockTimestamp: BigInt!
  from: Bytes!
}


type GigTransactionEntity @entity(immutable: true) {
  id: Bytes!
  action: Int!
  pactType: Int!
  pactId: GigPactEntity
  gasPrice: String!
  gasUsed: String!
  transactionHash: Bytes!
  blockTimestamp: BigInt!
  from: Bytes!
}

# type Arbitrator @entity{
#   id: Bytes!
#   dispute: DisputeData!
#   addr: Bytes!
#   hasResolved: Boolean!
# }

type DisputeData @entity {
  id: Bytes!
  arbitratorAccepted: Boolean!
  arbitratorProposedFlag: Boolean!
  arbitratorProposer: Bytes!
  proposedAmount: String!
  proposedArbitrators: [Bytes!]!
  hasResolved: [Boolean!]!
}

type PayData @entity {
  id: Bytes!
  lastPayAmount: String!
  lastPayTimeStamp: BigInt!
  pauseDuration: BigInt!
  pauseResumeTime: BigInt!
  proposedAmount: String!
}

type LogPaymentMade @entity(immutable: true) {
  id: Bytes!
  pactId: Bytes!
  amount: BigInt!
  payer: Bytes!
  blockNumber: BigInt!
  timestamp: BigInt!
  transactionHash: Bytes!
  pact: GigPactEntity!
}

type VotingInfo @entity {
  id: Bytes!
  votingEnabled: Boolean!
  openParticipation: Boolean!
  refundOnVotedYes: Boolean!
  refundOnVotedNo: Boolean!
  votingConcluded: Boolean!
  duration: Int!
  votingStartTimestamp: Int!
  minContribution: String!
}

type UserInteractionData @entity {
  id: Bytes!
  canVote: Boolean!
  hasVoted: Boolean!
  castedVote: Boolean!
  contribution: String!
  pact: ProposalPactEntity!
}

type ProposalPactEntity @entity {
  id: Bytes!
  creator: Bytes!
  uid: Bytes!
  pactText: String!
  refundAvailable: Boolean!
  totalValue: String!
  yesVotes: BigInt!
  noVotes: BigInt!
  votingInfo: VotingInfo!
  voters: [Bytes!]!
  yesBeneficiaries: [Bytes!]!
  noBeneficiaries: [Bytes!]!
  isEditable: Boolean!
  userInteractionData: [UserInteractionData!]! @derivedFrom(field: "pact")
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  pactTransactions: [ProposalTransactionEntity!]! @derivedFrom(field: "pactId")
}