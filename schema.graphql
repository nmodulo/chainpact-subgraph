
type GigPactEntity @entity(immutable: true) {
  id: Bytes!
  creator: Bytes!
  employer: Bytes!
  employee: Bytes!
  payAmount: String!
  erc20TokenAddress: Bytes!
  pactPayScheduleDays: BigInt!
  pactName: String!
  employeeSignedDate: BigInt
  pactId: Bytes!
  documentHash: Bytes
  disputeData: DisputeData!
  payData: PayData!
  stakeAmount: String!
  pactState: Int!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
type DisputeData @entity {
  id: Bytes!
  arbitratorAccepted: Boolean!
  arbitratorProposed: Boolean!
  arbitratorProposer: Bytes!
  proposedAmount: String!
  proposedArbitrators: [Bytes!]!
}

type PayData @entity {
  id: Bytes!
  lastPayAmount: String!
  lastPayTimeStamp: BigInt!
  pauseDuration: BigInt!
  pauseResumeTime: BigInt!
  proposedAmount: String!
}

type LogPaymentMade @entity(immutable: true) {
  id: Bytes!
  pactId: Bytes!
  value: BigInt!
  payer: Bytes!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type VotingInfo @entity(immutable: true) {
  id: Bytes!
  votingEnabled: Boolean!
  openParticipation: Boolean!
  refundOnVotedYes: Boolean!
  refundOnVotedNo: Boolean!
  votingConcluded: Boolean!
  duration: Int!
  votingStartTimestamp: BigInt!
  minContribution: String!
}

type UserInteractionData @entity(immutable: true) {
  id: Bytes!
  canVote: Boolean!
  hasVoted: Boolean!
  castedVote: Boolean!
  contribution: String!
}

type LogProposalPactCreated @entity(immutable: true) {
  id: Bytes!
  creator: Bytes!
  uid: Bytes!
  pactText: String!
  refundAvailable: Boolean!
  totalValue: String!
  yesVotes: BigInt!
  noVotes: BigInt!
  votingInfo: VotingInfo!
  voters: [Bytes!]!
  yesBeneficiaries: [Bytes!]!
  noBeneficiaries: [Bytes!]!
  isEditable: Boolean!
  userInteractionData: [UserInteractionData!]!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}